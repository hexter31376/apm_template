# Minimal Apache configuration
ServerRoot "/usr/local/apache2"
# Apache의 “기준 디렉터리”. 상대 경로(예: conf/mime.types)의 기준이 된다.
Listen 80
# 도커 컨테이너 내부에서 80/TCP로 대기. 이 프로젝트에서 설정한 .env의 포트와 연결될 컨테이너 내부의 포트
ServerName localhost:80
# 서버의 “자기 이름” 선언. 리다이렉트/로그에 쓰이고, 경고 억제 효과.

# Essential modules
LoadModule mpm_event_module modules/mod_mpm_event.so
# 이벤트 기반 MPM. keep-alive 처리 효율 좋아서 현대적 기본.
LoadModule unixd_module modules/mod_unixd.so
# 프로세스의 권한/UID 제어. 컨테이너 내에서도 내부 권한 드랍에 쓰임.
LoadModule authz_core_module modules/mod_authz_core.so
# all granted 같은 접근 제어의 코어.
LoadModule dir_module modules/mod_dir.so
# DirectoryIndex 처리(디렉터리 접근 시 index 파일 탐색).
LoadModule mime_module modules/mod_mime.so
# 확장자→MIME 타입 매핑(TypesConfig)으로 Content-Type 결정.
LoadModule log_config_module modules/mod_log_config.so
# 접근로그 포맷(combined) 등 로그 설정.
LoadModule proxy_module modules/mod_proxy.so
# 프록시 기본 프레임워크.
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
# FastCGI 프록시. PHP-FPM(TCP/Unix)로 넘길 때 필수.

# 기본 서버 도큐먼트 세팅
DocumentRoot "/var/www/html/public"
# 해당 경로를 서버에서 제공할 루트 디렉토리로 지정
DirectoryIndex index.php index.html
# 해당 경로에서의 index로서 기본 실행할 파일 이름들

# Basic directory permissions
# 특정 경로에 대한 정책 블록
<Directory "/var/www/html/public">
    AllowOverride All
    # .htaccess가 설정을 덮어쓸 수 있게 허용. 개발 편하지만 성능/보안 비용이 있다. 운영에선 가능하면 필요 최소만 열거나(예: AllowOverride FileInfo) 아예 리라이트를 vhost에 직접 쓴다.
    Require all granted
    # 해당 디렉토리의 모든 접근 권한을 허용한다.
    # Require all denied
    # 해당 디렉토리의 모든 접근 권한을 거부한다.
</Directory>

# PHP-FPM handler
<FilesMatch "\.(php|html)$">
# 핵심: .php 뿐 아니라 .html도 PHP-FPM으로 보낸다.
    SetHandler "proxy:fcgi://php:9000"
</FilesMatch>

# Logging
ErrorLog /proc/self/fd/2
# 표준 에러(2)로 로그를 보낸다
CustomLog /proc/self/fd/1 combined
# 표준출력(1) 으로 로그를 보낸다 # combined는 일반적인 접근로그 포맷
LogLevel info
# 로그 상세도
# debug로 가면 너무 시끄럽고, warn이면 정보가 적다. 개발은 info, 트러블슈팅은 debug, 운영은 warn/notice를 흔히 쓴다.

# 도커 로그와 바로 연동되어 docker logs로 확인 가능.

# MIME types
TypesConfig conf/mime.types
# mod_mime가 참조하는 MIME 매핑 파일.